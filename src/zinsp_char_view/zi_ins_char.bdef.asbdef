managed implementation in class zbp_i_ins_char unique;
strict ( 2 );
with draft;

define behavior for ZI_INS_CHAR //alias <alias_name>
persistent table zinsp_char_db
draft table zinsp_char_d
lock master total etag ZLocalLastChangedAt
authorization master ( instance )
etag master ZLastChangedAt
{

  field (readonly)
  ZProductUuid;

  field (numbering : managed)
  ZProductUuid;

  create;
  update;
  delete;

  draft action Edit;
draft action Activate optimized;
draft action Discard;
draft action Resume;
draft determine action Prepare;

 mapping for ZINSP_CHAR_DB
{
ZProductUuid = z_product_uuid;
ZMainproductid =  z_mainproductid;
ZMainproductprice = z_mainproductprice;
ZMainproductpricecur = z_mainproductpricecur;
ZCreatedBy = z_created_by;
ZCreatedAt = z_created_at;
ZLastChangedBy = z_last_changed_by;
ZLastChangedAt = z_last_changed_at;
ZLocalLastChangedAt = z_local_last_changed_at;
}

  association _Root { create; with draft; }
}

define behavior for ZINS_CHAR_ITEM //alias <alias_name>
persistent table zinsp_charitm_db
draft table zinsp_char_itm_d
lock dependent by _Item
authorization dependent by _Item
etag master ZLastChangedAt
{
  update;
  delete;
  field ( readonly )
  ZProductUuid,
  ZSubproductUuid;


  field (   numbering : managed)
  ZSubproductUuid;

  mapping for   ZINSP_CHARITM_DB
{
ZSubproductUuid = z_subproduct_uuid;
ZMainproductid =  z_mainproductid;
ZSupProductid = z_sup_productid;
ZProductUuid = z_product_uuid;
ZProductType = z_product_type;
ZSupprdPrice = z_supprd_price;
ZSupprdCur = z_supprd_cur;
ZCreatedBy = z_created_by;
ZCreatedAt = z_created_at;
ZLocalLastChangedAt = z_local_last_changed_at;
ZLastChangedBy = z_last_changed_by;
ZLastChangedAt = z_last_changed_at;
}

  association _Item  { with draft; }
}